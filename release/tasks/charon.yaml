apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: konflux-mrrc-charon
spec:
  params:
    - name: dataJsonPath
      description: path to data json file
    - name: mavenRepoPath
      description: path of the maven repo zip to upload
    - name: charonConfig
      description: the configmap name for charon configs
      type: string
      default: "charon-configs"
    - name: charonConfigVol
      description: the configmap mount volume name for charon configs
      type: string
      default: "charon-configs-vol"
    - name: charonAWSVol
      description: the secret mount volume name for charon aws credentials
      type: string
      default: "charon-aws-vol"
    - name: charonAWSCreds
      type: string
      default: "charon-aws-credentials"
  steps:
    - name: upload-maven-repo
      image: quay.io/ligangty/charon:latest
      script: |
        set -eux
        jsonData=$(cat $(params.dataJsonPath))
        target=$(echo $jsonData | jq -r '.target')
        if [ "$target" == "" ] && [ "$target" == "null" ]; then
          target="prod-maven-ga"
        fi
        productName=$(echo $jsonData | jq -r '.product.name')
        productVersion=$(echo $jsonData | jq -r '.product.version')
        productZipUrl=$(echo $jsonData | jq -r '.product.zipUrl')
        awsEnvs=$(echo $jsonData | jq '.awsEnvs') 
        if [ "$awsEnvs" != "" ] && [ "$awsEnvs" != "null" ]; then 
          for i in $(echo $awsEnvs | jq 'keys[]'); do
            eval "export $i=$(echo $awsEnvs | jq .$i)" 
          done
        fi
        echo "Release $productName-$productVersion into $target"
        charon upload -p $productName -v $productVersion -t $target $(params.mavenRepoPath)
      workingDir: $(workspaces.data.path)
      volumeMounts:
        - name: "$(params.charonConfigVol)"
          mountPath: "/home/charon/.charon"
        - name: "$(params.charonAWSVol)"
          mountPath: "/home/charon/.aws"
  volumes:
    - name: "$(params.charonConfigVol)"
      configMap:
        name: "$(params.charonConfig)"
    - name: "$(params.charonAWSVol)"
      secret:
        secretName: "$(params.charonAWSCreds)"
  workspaces:
    - name: data