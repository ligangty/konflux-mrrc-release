apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mrrc-publish
spec:
  params:
    - name: mrrcParamFilePath
      description: path of the env file for following tasks
      type: string
    - name: cosignPubKeyFile
      description: the public key file name for cosign verification
      type: string
      default: "cosign.pub"
    - name: cosignPubKeySecret
      description: the secret name for cosign verify public key
      type: string
      default: "test-cosign-pub-key"
    - name: charonAWSSecret
      description: the secret name for charon aws credential file
      type: string
  steps:
    - name: verify-repo-signature
      image: registry.redhat.io/rhtas/cosign-rhel9:1.0.1 
      script: |
        set -eux
        cd $(workspaces.data.path)
        source $(params.mrrcParamFilePath)
        echo "Verify the maven repo zip $MRRC_ZIP_REGISTRY"
        cosign verify --key /home/konflux/.cosign/$(params.cosignPubKeyFile) $MRRC_ZIP_REGISTRY
      workingDir: $(workspaces.data.path)
      volumeMounts:
        - name: "pub-key-vol"
          mountPath: "/home/konflux/.cosign/"
    - name: download-maven-repo
      image: quay.io/konflux-ci/oras:latest
      script: |
        set -eux
        cd $(workspaces.data.path)
        source $(params.mrrcParamFilePath)
        echo "Downloading the maven repo zip $MRRC_ZIP_REGISTRY"
        mkdir maven-repo
        cd maven-repo
        oras pull $MRRC_ZIP_REGISTRY
      workingDir: $(workspaces.data.path)
    - name: upload-maven-repo
      image: quay.io/ligangty/charon:latest
      script: |
        set -eux
        cd $(workspaces.data.path)
        source $(params.mrrcParamFilePath)
        target=$MRRC_TARGET
        productName=$MRRC_PRODUCT_NAME
        productVersion=$MRRC_PRODUCT_VERSION
        mavenRepoPath=$(ls ./maven-repo/*.zip)
        echo "Release $productName-$productVersion into $target"
        charon upload -p $productName -v $productVersion -t $target $mavenRepoPath
      workingDir: $(workspaces.data.path)
      volumeMounts:
        - name: "charon-configs-vol"
          mountPath: "/home/charon/.charon"
        - name: "charon-aws-vol"
          mountPath: "/home/charon/.aws"
  volumes:
    - name: "pub-key-vol"
      secret:
        secretName: "$(params.cosignPubKeySecret)"
    - name: "charon-configs-vol"
      configMap:
        name: "charon-configs"
    - name: "charon-aws-vol"
      secret:
        secretName: "$(params.charonAWSSecret)"
  workspaces:
    - name: data