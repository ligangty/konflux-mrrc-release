apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: konflux-mrrc-help
spec:
  params:
    - name: dataJsonPath
      description: path to data json file
    - name: charonConfig
      desscription: the configmap name for charon configs
      type: string
      default: "charon-configs"
    - name: charonConfigVol
      desscription: the configmap mount volume name for charon configs
      type: string
      default: "charon-configs-vol"
  steps:
    - name: show-konflux-mrrc-help
      image: quay.io/ligangty/charon:latest
      script: |
        set -eux
        jsonData=$(cat $(params.dataJsonPath))
        target=$(cat $jsonData | jq '.target')
        if [ "$target" == "" ] && [ "$target" == "null" ]; then
          target="prod-maven-ga"
        fi
        productName=$(cat $jsonData | jq '.product.name')
        productVersion=$(cat $jsonData | jq '.product.version')
        productZipUrl=$(cat $jsonData | jq '.product.zipUrl')
        awsEnvs=$(cat data.json | jq '.awsEnvs') 
        if [ "$awsEnvs" != "" ] && [ "$awsEnvs" != "null" ]; then 
          for i in $(echo $awsEnvs | jq 'keys[]'); do
            eval "export $i=$(echo $awsEnvs | jq .$i)" 
          done
        fi
        export
        echo "Release $productName-$productVersion through $productZipUrl into $target"
        charon --help
      workingDir: $(workspaces.data.path)
      volumeMounts:
        - name: "$(params.charonConfigVol)"
          mountPath: "/home/charon/.charon"
  volumes:
    - name: "$(params.charonConfigVol)"
      configMap:
        name: "$(params.charonConfig)"
  workspaces:
    - name: data