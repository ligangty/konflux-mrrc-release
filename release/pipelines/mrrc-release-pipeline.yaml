---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: mrrc-release-pipeline
  labels:
    app.kubernetes.io/version: "4.1.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Single test pipeline for test release
  params:
    - name: release
    - name: releasePlan
    - name: releasePlanAdmission
    - name: releaseServiceConfig
    - name: snapshot
    - name: taskGitUrl
      type: string
      description: The url to the git repo where the release-service-catalog tasks to be used are stored
      default: https://github.com/ligangty/konflux-mrrc-release.git
    - name: taskGitRevision
      type: string
      default: main
    - name: konfluxTaskGitUrl
      type: string
      description: The url to the git repo where the release-service-catalog tasks to be used are stored
      default: https://github.com/konflux-ci/release-service-catalog.git
    - name: konfluxTaskGitRevision
      type: string
      description: The revision in the taskGitUrl repo to be used
      default: production
  workspaces:
    - name: release-workspace
  tasks:
    - name: collect-data
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: $(params.konfluxTaskGitUrl)
          - name: revision
            value: $(params.konfluxTaskGitRevision)
          - name: pathInRepo
            value: tasks/collect-data/collect-data.yaml
      params:
        - name: release
          value: $(params.release)
        - name: releasePlan
          value: $(params.releasePlan)
        - name: releasePlanAdmission
          value: $(params.releasePlanAdmission)
        - name: releaseServiceConfig
          value: $(params.releaseServiceConfig)
        - name: snapshot
          value: $(params.snapshot)
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      workspaces:
        - name: data
          workspace: release-workspace
    - name: collect-mrrc-params
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: release/tasks/collect-mrrc-params.yaml
      params:
        - name: dataJsonPath
          value: "$(workspaces.data.path)/$(tasks.collect-data.results.data)"
      workspaces:
        - name: data
          workspace: release-workspace
      runAfter:
        - collect-data
    - name: mrrc-publish
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: release/tasks/mrrc-publish.yaml
      params:
        - name: mrrcParamFilePath
          value: "$(tasks.collect-mrrc-params.results.mrrcParamFilePath)"
        - name: charonAWSSecret
          value: "$(tasks.collect-mrrc-params.results.charonAWSSecret)"
      workspaces:
        - name: data
          workspace: release-workspace
      runAfter:
        - collect-mrrc-params